{"version":3,"sources":["header.js","content_Price.js","content_News.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","this","props","currentCount","type","onClick","refresh","Component","Price","price_info","class","content_Price_Update_time","BTC_PRICE","BTC_PERCENT","ETH_PRICE","ETH_PERCENT","XRP_PRICE","XRP_PERCENT","Update_time","_ref","Object","objectDestructuringEmpty","News","state","max_length","news_length","_renderNews","number","_this","news","slice","map","index","content_News_News_content","image","source_info","img","link","guid","title","content","body","key","_getNews","_callee","regenerator_default","wrap","_context","prev","next","_callapi","sent","setState","length","stop","popup","toast","fetch","then","potato","json","Data","catch","error","console","log","_morenews","alert","prevProps","content_News_Update_time","content_News_Loading","content_News_Button_view_number","content_News_Button_all_number","lib","News_content","_ref2","href","target","src","alt","content_News_News_time","Loading","LoadingOverlay_default","active","spinner","text","News_time","_ref3","Button_view_number","_ref4","Button_all_number","_ref5","_ref6","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","DISPLAY","_getPrice","asyncToGenerator","mark","price","BTC","KRW","PRICE","ETH","XRP","CHANGEPCT24HOUR","handleCreate","data","prevState","intervalId","setInterval","timer","bind","react","header","content_Price","content_News","nextProps","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29dd31b6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1>Live Cryptocurrency</h1>\r\n                <p className=\"countdown\">{this.props.currentCount}</p>\r\n                <button type=\"button\" className=\"btn_reload\" onClick={this.props.refresh}><span className=\"blind\">Refresh</span></button>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nclass Price extends Component {\r\n  render() {\r\n    const price_info = this.props;\r\n    return (\r\n      <article className=\"box__price\">\r\n        <h2 className=\"h_type\">Live Prices <span><span class=\"icon_update\">업데이트 시간</span><Update_time /></span></h2> \r\n        <ul className=\"list__coin\">\r\n          <li className=\"active\">\r\n            <dl>\r\n              <dt>BTC/KRW</dt>\r\n              <dd>{price_info.BTC_PRICE}</dd>\r\n              <dd>{price_info.BTC_PERCENT}%</dd>\r\n            </dl>\r\n          </li>\r\n           <li className=\"active\">\r\n            <dl>\r\n            <dt>ETH/KRW</dt>\r\n            <dd>{price_info.ETH_PRICE}</dd>\r\n            <dd>{price_info.ETH_PERCENT}%</dd>\r\n            </dl>\r\n          </li>\r\n          <li className=\"active\">\r\n            <dl>\r\n            <dt>XRP/KRW</dt>\r\n            <dd>{price_info.XRP_PRICE}</dd>\r\n            <dd>{price_info.XRP_PERCENT}%</dd>\r\n            </dl>\r\n          </li>\r\n        </ul>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nconst Update_time = ({  }) => {\r\n  return(\r\n    <time>00:00</time>\r\n  )\r\n}\r\n\r\n\r\nexport default Price;\r\n","import React, { Component } from 'react';\nimport LoadingOverlay from 'react-loading-overlay'\nimport { ToastContainer, toast } from 'react-toastify'; //팝업\nimport 'react-toastify/dist/ReactToastify.css'; //팝업\n\nclass News extends Component {\n  state = {\n    max_length : null,\n    news_length : 5\n  }\n\n  componentDidMount(){ //데이터 get\n    this._getNews()\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(prevProps)\n  }\n  \n  _renderNews = () =>{\n    const number = this.state.news_length //시작점\n    const news = this.state.news.slice(0,number).map((news,index)=>{\n      //console.log(news)\n      return <News_content image={news.source_info.img} link={news.guid} title={news.title} content={news.body} key={index}  />\n    });\n  \n    return news\n  }\n  \n  _getNews = async () =>{\n    const news = await this._callapi()\n    this.setState({\n      news:news\n    })\n    this.setState({\n      max_length:this.state.news.length\n    })\n  }\n\n  popup = () =>{\n    toast(\"Load +5 News\");\n  } \n  \n  _callapi = () =>{\n    return fetch('https://min-api.cryptocompare.com/data/v2/news/?lang=EN')\n    .then(potato => potato.json())//데이터를 상황에 맞게 편집 할 수 있음\n    .then(json => json.Data)\n    .catch(error => console.log(error))\n  }\n\n  _morenews = () =>{\n    //console.log(this.state.news_length,this.state.max_length)\n    if(this.state.news_length < this.state.max_length){\n      this.setState({\n        news_length: this.state.news_length + 5\n      });\n      this.popup()\n    }else{\n      alert(\"더이상 리스트가 없습니다.\")\n    }\n  }\n\n  render() {\n    //console.log(this.state)\n    return (\n      <article className=\"box__news\">\n          <div className=\"h_area\">\n            <h2>Recent News \n              <span>\n                <span className=\"icon_update\">업데이트 시간</span><Update_time />\n              </span>\n            </h2>\n          </div>\n          <ul>\n            {this.state.news ? this._renderNews() : <Loading />}\n          </ul>\n          <button type=\"button\" onClick={this._morenews} className=\"btn_type\">More (<Button_view_number number={this.state.news_length} />/<Button_all_number number={this.state.max_length} />) </button>\n          <ToastContainer/>\n      </article>\n    );\n  }\n}\nconst News_content =({title,content,image,link}) =>{\n  return(\n    <li class=\"list-item\">\n      <a href={link} target=\"blank\" >\n        <div className=\"bx2\">\n          <img src={image} alt={title} />\n        </div>\n        <dl>\n          <dt><News_time number={\"times... \"} />{title}</dt>\n          <dd><p>{content}</p></dd>\n        </dl>\n      </a>\n    </li>\n  )\n}\n\nconst Loading = () => {\n  //console.log(active)\n  return (\n    <LoadingOverlay active={true} spinner text=\"Loading...\" />\n  )\n}\n\nconst News_time = ({ number }) => {\n  return(\n    <time>{number}</time>\n  )\n}\n\n\nconst Button_view_number = ({ number }) => {\n  return(\n    <time>{number}</time>\n  )\n}\n\nconst Button_all_number = ({ number }) => {\n  return(\n    <time>{number}</time>\n  )\n}\n\nconst Update_time = ({  }) => {\n  return(\n    <time>00:00</time>\n  )\n}\n\n\nexport default News;\n","import React, { Component, Fragment } from 'react';\nimport Header from './header';\nimport Price from './content_Price';\nimport News from './content_News';\nimport { ToastContainer, toast } from 'react-toastify'; //팝업\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css'; //팝업\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      currentCount:60,\n      BTC_PRICE : null,\n      ETH_PRICE : null,\n      XRP_PRICE : null,\n      BTC_PERCENT : null,\n      ETH_PERCENT : null,\n      XRP_PERCENT : null,\n    }\n  }\n  \n  static getDerivedStateFromProps(nextProps, prevState) {\n//    console.log(prevState)\n    // 여기서는 setState 를 하는 것이 아니라\n    // 특정 props 가 바뀔 때 설정하고 설정하고 싶은 state 값을 리턴하는 형태로\n    // 사용됩니다.\n    /*\n    if (nextProps.value !== prevState.value) {\n      return { value: nextProps.value };\n    }\n    return null; // null 을 리턴하면 따로 업데이트 할 것은 없다라는 의미\n    */\n  }\n  componentDidMount(){\n    this._getPrice();\n    this.intervalId = setInterval(this.timer.bind(this), 1000);\n  }\n\n  _callapi = () =>{\n    return fetch('https://min-api.cryptocompare.com/data/pricemultifull?fsyms=BTC,ETH,XRP&tsyms=KRW')\n    .then(potato => potato.json())//데이터를 상황에 맞게 편집 할 수 있음\n    .then(json => json.DISPLAY) //CHANGEPCTDAY ,PRICE\n    .catch(error => console.log(error))\n  }\n\n  _getPrice = async () =>{\n    const price = await this._callapi()\n    this.setState({\n      BTC_PRICE : price.BTC.KRW.PRICE,\n      ETH_PRICE : price.ETH.KRW.PRICE,\n      XRP_PRICE : price.XRP.KRW.PRICE,\n      BTC_PERCENT : price.BTC.KRW.CHANGEPCT24HOUR,\n      ETH_PERCENT : price.ETH.KRW.CHANGEPCT24HOUR,\n      XRP_PERCENT : price.XRP.KRW.CHANGEPCT24HOUR\n    })\n  }\n\n  handleCreate = (data) =>{\n    //console.log(data);\n  }\n\n  timer() {\n    this.setState({\n      currentCount: this.state.currentCount - 1\n    })\n    if(this.state.currentCount < 1) {\n      this.setState({currentCount:60})\n      this.popup()\n    }\n  }\n    \n  componentWillUnmount(){\n    //clearInterval(this.intervalId);\n  }\n\n  refresh = (prevState) =>{\n      this.setState({currentCount:60})\n      this.popup()\n      this._getPrice()\n      console.log(prevState,\"버튼클릭 시 데이터비교 및 값 변경\")\n  }\n\n  popup = () =>{\n      toast(\"Update check ...\");\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* <Header onCreate={this.handleCreate} /> */}\n        <Header currentCount={this.state.currentCount} refresh={this.refresh} />\n        <div className=\"bx\">\n          <Price BTC_PRICE={this.state.BTC_PRICE} ETH_PRICE={this.state.ETH_PRICE} XRP_PRICE={this.state.XRP_PRICE} BTC_PERCENT={this.state.BTC_PERCENT} ETH_PERCENT={this.state.ETH_PERCENT} XRP_PERCENT={this.state.XRP_PERCENT} />\n          <News />\n        </div>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}